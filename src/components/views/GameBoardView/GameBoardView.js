import React, { useEffect } from 'react';

import { connect, useDispatch } from 'react-redux';

import GameBoardColumn from './GameBoard_components/GameBoardColumn';

import jService from '../../../api/jService';
import filterCluesWithValues from '../../../logic/getCategoryClues';
import generateCategoryIdSet from '../../../logic/generateCategoryIdSet';

const GameBoardView = () => {
  const dispatch = useDispatch();
  // each GameCard component should recieve getClues as a prop.
  // For now I'm just calling getClues from here for testing.
  useEffect(() => {
    // dispatch({ type: 'GET_COLUMN_1', payload: ids[1] });
    // getClues();
  }, []);

  const ids = generateCategoryIdSet();

  //   const getClues = async (categoryID) => {
  //     const { data } = await jService.get('/', {
  //       params: {
  //         // this will need to be change to categoryID
  //         id: categoryID,
  //       },
  //     });
  //     // getClues will need to be called for each category column.
  //     // It will need a categoryID which is generated by generateCategoryIdSet().
  //     return filterCluesWithValues(data.clues, data.title);
  //   };

  const columns = ids.map((item, index) => {
    return <GameBoardColumn categoryID={item} key={index} />;
  });

  return (
    <div className="flex justify-between items-center w-full space-x-4">
      {/* <h1>Game Board Goes Here</h1> */}

      {/* <GameBoardColumn categoryID={ids[5]} />
      <GameBoardColumn categoryID={ids[4]} />
      <GameBoardColumn categoryID={ids[3]} />
      <GameBoardColumn categoryID={ids[2]} />
      <GameBoardColumn categoryID={ids[1]} /> */}
      {columns}
    </div>
  );
};

export default connect()(GameBoardView);
