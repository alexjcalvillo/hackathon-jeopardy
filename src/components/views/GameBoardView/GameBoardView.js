import React, { useEffect } from 'react';
import GameBoardColumn from './GameBoard_components/GameBoardColumn';
import GameCard from './GameBoard_components/GameCard';

import jService from '../../../api/jService';
import filterCluesWithValues from '../../../logic/getCategoryClues';
import generateCategoryIdSet from '../../../logic/generateCategoryIdSet';
import ScoreBoard from './GameBoard_components/ScoreBoard';

const GameBoardView = () => {
  // each GameCard component should recieve getClues as a prop.
  // For now I'm just calling getClues from here for testing.
  useEffect(() => {
    getClues();
  }, []);

  const ids = generateCategoryIdSet();

  const getClues = async (categoryID) => {
    const { data } = await jService.get('/', {
      params: {
        // this will need to be change to categoryID
        id: ids[0],
      },
    });
    // getClues will need to be called for each category column.
    // It will need a categoryID which is generated by generateCategoryIdSet().
    return console.log(filterCluesWithValues(data.clues, data.title));
  };

  const Cards =
    [
        <GameCard Type="Category" Category="Dogs" />,
        <GameCard
            Type="Question"
            Category="dogs"
            Question="This dog is spotted and often referred to in a certain movie containing the number 101"
            PointValue={100}
            Answer="Dalmation"
        />,
        <GameCard />,
        <GameCard />,
        <GameCard />,
        <GameCard />
    ];
  return (
    <div className="flex justify-between items-center w-full space-x-4">
      <ScoreBoard />
      <GameBoardColumn Cards={Cards} getClues={getClues} />
      <GameBoardColumn Cards={Cards} getClues={getClues} />
      <GameBoardColumn Cards={Cards} getClues={getClues} />
      <GameBoardColumn Cards={Cards} getClues={getClues} />
      <GameBoardColumn Cards={Cards} getClues={getClues} />
      <GameBoardColumn Cards={Cards} getClues={getClues} />
    </div>
  );
};

export default GameBoardView;
